require "main.scripts.player_data"

function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
	-- win gui settings 
	self.winner_title = gui.get_node("winner_box")
	self.winner_body = gui.get_node("winner_text")
	self.winner_body_button = gui.get_node("winner_okay_button/buttonBody")
	self.winner_body_text = gui.get_node("winner_text_user")
	gui.set_enabled(self.winner_title, false)
	gui.set_enabled(self.winner_body, false)
	gui.set_enabled(self.winner_body_button, false)
	gui.set_enabled(self.winner_body_text, false)


end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
	if message_id == hash("Show") then 
		gui.set_enabled(self.winner_title, true)
		gui.set_enabled(self.winner_body, true)
		gui.set_enabled(self.winner_body_button, true)
		gui.set_enabled(self.winner_body_text, true)

		
		--streak_check = check_stats_top('streak', 1)
		--twelves_check = check_stats_top('twelves', 4)

		winner_score, winner_player = get_winner()
		high_score_check = check_stats_top('highscore', winner_score)
		if high_score_check == true then 
			save_stats_top( 'highscore', winner_score, winner_player)
			print('new high score added')
		end
		
		gui.set_text(self.winner_body_text, winner_player .. "\n " .. winner_score)
		msg.post(".", "acquire_input_focus")
	elseif message_id == hash("Hide") then 
		gui.set_enabled(self.winner_title, false)
		gui.set_enabled(self.winner_body, false)
		gui.set_enabled(self.winner_body_button, false)
		gui.set_enabled(self.winner_body_text, false)
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--    msg.post(".", "acquire_input_focus")
	if action.pressed and gui.pick_node(self.winner_body_button, action.x, action.y) then
		gui.play_flipbook(self.winner_body_button, hash("Button_Pressed"))
		msg.post("main:/winner#winner_box", "Hide")
		self.user1_score = 0 
		self.user2_score = 0
		self.score = 0
		self.round_num = 1

		-- play animation here once figured out 
		--msg.post("scoreboard#gui", "add_score", {amount = score})
	elseif action.released and gui.pick_node(self.winner_body_button, action.x, action.y) then
		gui.play_flipbook(self.winner_body_button, hash("Button_released"))
		--    msg.post(".", "acquire_input_focus")
	end--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
